<!DOCTYPE html>
<html>
<head>
    <title>Break Time Tracker</title>
    <style>
        /* Global Styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f9f9f9;
            color: #444;
            min-height: 100vh;
            position: relative;
        }

        /* Fixed Header */
        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #ffffff;
            padding: 10px 0;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        header h2 {
            color: #6ab04c;
            margin: 0;
        }

        header p {
            font-size: 1rem;
            color: #555;
            margin: 5px 0 0;
        }

        /* Main Container */
        .container {
            max-width: 600px;
            margin: 100px auto 0;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        /* Textarea Styles */
        textarea {
            width: 100%;
            height: 150px;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 15px;
            background-color: #fefefe;
            resize: none;
            transition: height 0.3s ease-in-out; /* Smooth height transition */
        }

        textarea.shrinked {
            height: 30px; /* Shrinks to one line */
            overflow: hidden;
        }

        /* Button */
        button {
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            font-weight: bold;
            color: white;
            background-color: #6ab04c;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #57a233;
        }

        /* Output Styles */
        .output {
            margin-top: 20px;
            padding: 20px;
            background-color: #ffffff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
        }

        .output h3 {
            color: #333;
            text-align: center;
            margin-bottom: 10px;
        }

        .output div {
            margin: 15px 0;
            font-size: 1rem;
            color: #555;
            padding: 10px;
            border-radius: 8px;
            background-color: #f5f5f5;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .output div.result-highlight {
            font-size: 1.1rem;
            font-weight: bold;
            color: #333;
            padding: 15px;
            border-left: 5px solid #6ab04c;
            background-color: #f8f8f8;
        }

        .output hr {
            border: 0;
            border-top: 1px solid #ddd;
            margin: 20px 0;
        }

        .red {
            color: #ff6f61;
        }

        .green {
            color: #6ab04c;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th, td {
            padding: 8px 12px;
            text-align: center;
            border-bottom: 1px solid #ddd;
            font-size: 0.95rem;
        }

        th {
            color: #333;
            font-weight: bold;
        }

        /* Footer */
        footer {
            text-align: center;
            font-size: 0.85rem;
            color: #888;
            font-style: italic;
            position: fixed;
            bottom: 0;
            width: 100%;
            background-color: #f9f9f9;
            padding: 10px 0;
            box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                width: 90%;
                padding: 15px;
            }

            textarea {
                height: 120px;
            }

            button {
                font-size: 0.9rem;
            }

            th, td {
                font-size: 0.85rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <h2>Break Time Tracker</h2>
        <p>Calculate your total breaks and work time remaining.</p>
    </header>

    <div class="container">
        <textarea id="timeInputs" placeholder="Enter punch-in and punch-out times, one per line"></textarea>
        <button onclick="calculateBreakTime()">Calculate</button>

        <div class="output" id="output"></div>
    </div>

    <footer id="quote">
        <!-- The quote will be updated dynamically -->
    </footer>

    <script>
        function calculateBreakTime() {
            const input = document.getElementById('timeInputs');
            if (!input.value) {
                alert("Please enter punch-in and punch-out times.");
                return;
            }

            input.classList.add('shrinked'); // Shrink the textarea on click

            const times = input.value.split('\n').map(time => time.trim()).filter(Boolean);
            if (times.length < 2) {
                alert("Please enter at least one login and one break time.");
                return;
            }

            const loginTime = new Date(`1970-01-01T${convertTo24Hour(times[0])}`);
            let totalBreakTime = 0;
            const breakPairs = [];

            for (let i = 1; i < times.length; i += 2) {
                const breakOutTime = new Date(`1970-01-01T${convertTo24Hour(times[i])}`);
                if (i + 1 < times.length) {
                    const breakInTime = new Date(`1970-01-01T${convertTo24Hour(times[i + 1])}`);
                    const breakDuration = (breakInTime - breakOutTime) / 1000;
                    totalBreakTime += breakDuration;

                    breakPairs.push({
                        outTime: formatTime(breakOutTime),
                        inTime: formatTime(breakInTime),
                        duration: formatDurationWithoutHours(breakDuration),
                    });
                }
            }

            const remainingBreakTime = Math.max(3600 - totalBreakTime, 0);
            const workDuration = 8 * 3600 + 60;
            const estimatedEndTime = new Date(loginTime.getTime() + workDuration * 1000 + totalBreakTime * 1000);

            let outputHtml = "<h3>Results</h3>";
            const totalBreakClass = totalBreakTime > 3600 ? "red" : "green";
            const emoji = totalBreakTime > 3600 ? "üòê" : "üòä";
            outputHtml += `<div class="result-highlight"><b>Total Break Time:</b> <span class="${totalBreakClass}">${formatDuration(totalBreakTime)} ${emoji}</span></div>`;

            const remainingBreakClass = remainingBreakTime === 0 && totalBreakTime > 3600 ? "red" : "green";
            outputHtml += `<div class="result-highlight"><b>Remaining Break Time:</b> <span class="${remainingBreakClass}">${formatDuration(remainingBreakTime)}</span></div>`;

            outputHtml += `<hr><div><b>Estimated Logout Time:</b> ${formatTime(estimatedEndTime)}</div><hr>`;

            outputHtml += "<h3>Break Details</h3>";
            outputHtml += `<table><thead><tr><th>Out</th><th>In</th><th>Duration</th></tr></thead><tbody>`;
            breakPairs.forEach(pair => {
                outputHtml += `<tr><td>${pair.outTime}</td><td>${pair.inTime}</td><td>${pair.duration}</td></tr>`;
            });
            outputHtml += "</tbody></table>";

            document.getElementById('output').innerHTML = outputHtml;
        }

        function convertTo24Hour(time) {
            const [timePart, modifier] = time.split(" ");
            let [hours, minutes, seconds] = timePart.split(":").map(Number);
            if (modifier === "PM" && hours !== 12) hours += 12;
            if (modifier === "AM" && hours === 12) hours = 0;
            return `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;
        }

        function formatDuration(seconds) {
            const hrs = Math.floor(seconds / 3600);
            const mins = Math.floor((seconds % 3600) / 60);
            const secs = Math.floor(seconds % 60);
            return `${hrs > 0 ? hrs + "h " : ""}${mins}m ${secs}s`;
        }

        function formatDurationWithoutHours(seconds) {
            const mins = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${mins}m ${secs}s`;
        }

        function formatTime(date) {
            const hours = date.getHours() % 12 || 12;
            const minutes = date.getMinutes().toString().padStart(2, "0");
            const seconds = date.getSeconds().toString().padStart(2, "0");
            const ampm = date.getHours() >= 12 ? "PM" : "AM";
            return `${hours}:${minutes}:${seconds} ${ampm}`;
        }

        const quotes = [
            "Time is what we want most, but what we use worst. ‚Äì William Penn",
            "The key is in not spending time, but in investing it. ‚Äì Stephen R. Covey",
            "Lost time is never found again. ‚Äì Benjamin Franklin",
            "It‚Äôs not enough to be busy; so are the ants. The question is: what are we busy about? ‚Äì Henry David Thoreau",
            "Time is money. ‚Äì Benjamin Franklin",
            "The bad news is time flies. The good news is you‚Äôre the pilot. ‚Äì Michael Altshuler",
            "Better three hours too soon than a minute too late. ‚Äì William Shakespeare"
        ];

        const currentDay = new Date().getDay();
        document.getElementById("quote").textContent = quotes[currentDay];

        // Expand textarea on hover
        const textarea = document.getElementById('timeInputs');
        textarea.addEventListener('mouseover', () => {
            textarea.classList.remove('shrinked');
        });

        // Shrink textarea on mouseout
        textarea.addEventListener('mouseout', () => {
            if (document.getElementById('output').innerHTML.trim()) {
                textarea.classList.add('shrinked');
            }
        });
    </script>
</body>
</html>
